plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.google.protobuf' version '0.8.15'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        test {
            proto.srcDirs += 'src/test/protos'
            java.srcDirs += 'build/generated/source/proto/test/java' // this is a hack to get Android Studio to recognize the generated protocol buffer classes
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'

    implementation group: 'net.zetetic', name: 'android-database-sqlcipher', version: '4.4.3'
    implementation "androidx.sqlite:sqlite-ktx:2.1.0"

    implementation ('com.esotericsoftware:kryo:5.0.3') {
        exclude group: "org.objenesis"
    }
    implementation 'org.objenesis:objenesis:2.6'

    implementation 'com.google.protobuf:protobuf-javalite:3.10.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}